install.packages("swirl")
getwd()
install.packages("KernSmooth R")
install.packages("KernSmoothR")
install.packages("KernSmoothR")
install.packages("KernSmooth")
help("KernSmooth")
library(KernSmooth)
swirl()
library(swirl)
swirl()
install_from_swirl("R Programming")
swirl()
5 + 7
x <- 5 + 7
x
y <- x - 3
y
c(1.1,9,3.14)
z <- c(1.1,9,3.14)
?c
z
c(z,555,z)
z * 2 + 100
mysqrt <- sqrt(z -1)
my_sqrt <- sqrt(z -1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
}
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get, setmean = setmean, getmean = getmean)
}
function (y) {}
set <- function (y) {
x <<- y
m <<- NULL
}
x <- c(1,2,3,4,5,6,7,8,9)
set(x)
x
m
x
y <- x
set(y)
m.rm()
remove(m)
remove(x)
a <- makevector(y)
a <- makeVector(y)
a
a[1]
a[2]
a[3]
a[4]
a[4,1]
a{[4]]
a[[4]]
source('~/Documents/Data Science Course/cachemean.R')
cachemean(y)
class(y)
a<- makeVector(y)
b<- cachemean(a)
b<- cachemean(y)
a$getmean()
a$get()
mean(a$get())
source('~/Documents/Data Science Course/cachemean.R')
b<- cachemean(a)
a
b$getmean(y)
a$getmean(y)
a$getmean
a$get
a$getmean()
a$setmean()
a$setmean(m)
a$setmean(y)
b<- cachemean(a)
c
v
b
a <<- makeVector(y)
b <<- cachemean(a)
source('~/Documents/Data Science Course/cachemean.R')
b <<- cachemean(a)
b
cachemean(b)
cachemean(a)
x <- matrix(c(1,2,3),c(1,2,3))
x
matrix(data=(c(1,2,3),c(1,2,3)))
matrix(data=([c(1,2,3),c(1,2,3)]))
matrix(data=(c(1,2,3),c(1,2,3)))
m <- 1:9dim(m) <- c(3,3)
m <- 1:9
m <- 1:9
dim(m) <- c(3,3)
m
solve(m)
numeric(m)
m <- NULL
m
source('~/Documents/Data Science Course/makeCacheMatrix.R')
source('~/Documents/Data Science Course/makeCacheMatrix.R')
makeCacheMatrix(m)
m$get
m <- 1:9
dim(m) <- c(3,3)
m$get
m$get()
a <- makeCacheMatrix(m)
a$get()
a$set()
a$setinverse()
source('~/Documents/Data Science Course/makeCacheMatrix.R')
makeCacheMatrix <- function(m) {
x <- NULL
set <- function(y) {
m <<- y
x <<- NULL
}
get <- function() m
setinverse <- function(solve) m <<- solve
getinverse <- function() m
list(set = set, get = get, setinverse = setinverse, getinverse = getinverse)
}
source('~/Documents/Data Science Course/makeCacheMatrix.R')
m <- 1:9
dim(m) <- c(3,3)
a <- makeCacheMatrix(m)
a$set()
a$get()
a$setinverse()
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
source('~/datascience/rprog-data-ProgAssignment3-data/best.R')
submit()
getwd()
setwd("~/datascience/rprog-data-ProgAssignment3-data")
submit()
submit()
submit()
source('~/datascience/rprog-data-ProgAssignment3-data/best.R')
